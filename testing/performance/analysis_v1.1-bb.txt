Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 29.06      2.51     2.51 720707174     0.00     0.00  Board::get_piece_on_square(int)
 14.01      3.72     1.21 144152477     0.00     0.00  Bishop::get_attack_masks_blocking(int, unsigned long long)
 11.34      4.70     0.98 52710720     0.00     0.00  Board::move(BitMove const&, bool)
  9.38      5.51     0.81 141196367     0.00     0.00  Rook::get_attack_masks_blocking(int, unsigned long long)
  8.57      6.25     0.74 11261049     0.00     0.00  Game::evaluate()
  5.79      6.75     0.50        1     0.50     0.50  Game::Game(Board&)
  5.67      7.24     0.49 720707136     0.00     0.00  Game::evaluate_piece(int)
  3.01      7.50     0.26 75163172     0.00     0.00  Board::is_attacked(int, int)
  2.49      7.72     0.22 52710721     0.00     0.00  Board::update_occupancies()
  1.50      7.85     0.13  1493139     0.00     0.00  Pawn::add_legal_moves(Board&, BitMoveVec&)
  1.39      7.97     0.12        1     0.12     8.01  Game::search_best_alpha_beta(int&, int, int, int, int)
  1.04      8.06     0.09 40026176     0.00     0.00  Board::add_move_if_legal(BitMoveVec&, BitMove const&)
  1.04      8.15     0.09  1493139     0.00     0.00  Bishop::add_legal_moves(Board&, BitMoveVec&)
  1.04      8.24     0.09  8458392     0.00     0.00  void std::vector<BitMove, std::allocator<BitMove> >::_M_realloc_insert<BitMove const&>(__gnu_cxx::__normal_iterator<BitMove*, std::vector<BitMove, std::allocator<BitMove> > >, BitMove const&)